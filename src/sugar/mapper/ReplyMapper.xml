<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sugar.mapper.ReplyMapper">
  <resultMap id="BaseResultMap" type="sugar.bean.Reply">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="msgid" jdbcType="INTEGER" property="msgid" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="text" jdbcType="VARCHAR" property="text" />
    <result column="images" jdbcType="VARCHAR" property="images" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="read" jdbcType="VARCHAR" property="read" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, msgid, type, text, images, date, read
  </sql>
  <select id="selectByExample" parameterType="sugar.bean.ReplyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from reply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from reply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="sugar.bean.ReplyExample">
    delete from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="sugar.bean.Reply">
    insert into reply (id, msgid, type, 
      text, images, date, 
      read)
    values (#{id,jdbcType=INTEGER}, #{msgid,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, 
      #{text,jdbcType=VARCHAR}, #{images,jdbcType=VARCHAR}, #{date,jdbcType=TIMESTAMP}, 
      #{read,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="sugar.bean.Reply">
    insert into reply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="msgid != null">
        msgid,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="text != null">
        text,
      </if>
      <if test="images != null">
        images,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="read != null">
        read,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="msgid != null">
        #{msgid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="text != null">
        #{text,jdbcType=VARCHAR},
      </if>
      <if test="images != null">
        #{images,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="read != null">
        #{read,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="sugar.bean.ReplyExample" resultType="java.lang.Long">
    select count(*) from reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update reply
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.msgid != null">
        msgid = #{record.msgid,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.text != null">
        text = #{record.text,jdbcType=VARCHAR},
      </if>
      <if test="record.images != null">
        images = #{record.images,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=TIMESTAMP},
      </if>
      <if test="record.read != null">
        read = #{record.read,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update reply
    set id = #{record.id,jdbcType=INTEGER},
      msgid = #{record.msgid,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      text = #{record.text,jdbcType=VARCHAR},
      images = #{record.images,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=TIMESTAMP},
      read = #{record.read,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="sugar.bean.Reply">
    update reply
    <set>
      <if test="msgid != null">
        msgid = #{msgid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="text != null">
        text = #{text,jdbcType=VARCHAR},
      </if>
      <if test="images != null">
        images = #{images,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="read != null">
        read = #{read,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="sugar.bean.Reply">
    update reply
    set msgid = #{msgid,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      text = #{text,jdbcType=VARCHAR},
      images = #{images,jdbcType=VARCHAR},
      date = #{date,jdbcType=TIMESTAMP},
      read = #{read,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>